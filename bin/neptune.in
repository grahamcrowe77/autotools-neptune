#!/usr/bin/env escript
%% -*- erlang -*-
%%! -pa ebin

-define(SYSCONFDIR, <<".">>).
-define(COMMAND_NAME, <<"neptune">>).

main(Args) ->
    InPars = neptune_mod:parse_args(Args),
    Pars = InPars#{sysconfdir => ?SYSCONFDIR},
    case Pars of
	#{help := null} ->
	    ok = usage(),
	    halt(0);
	#{version := null} ->
	    ok = version(),
	    halt(0);
	#{type := Type}
	  when Type =:= <<"app">>
	       orelse
	       Type =:= <<"rel">> ->
	    case neptune_mod:skeleton(Pars) of
		ok ->
		    halt(0);
		{error, Reason} ->
		    ok = reason(Reason),
		    halt(1)
	    end;
	#{type := Type} ->
	    Reason = io_lib:format("type <~s> is unsupported", [Type]),
	    ok = reason(Reason),
	    halt(1)
    end.

usage() ->
    ok = io:format("~s Name~n", [?COMMAND_NAME]),
    ok = io:format("~s [--help]~n", [?COMMAND_NAME]),
    Format = "see manual page for ~s(1) for more details~n",
    ok = io:format(Format, [?COMMAND_NAME]).

version() ->
    ok = io:format("~s ~s~n", [?COMMAND_NAME, "@PACKAGE_VERSION@"]).

reason(Reason) ->
    Format = "Failed to create because ~s.~n",
    ok = io:format(Format, [Reason]),
    ok = usage().
